<? #careful not to put anything here to kill the headers

$ts = intval(time()/100);

# First decide whether to communicate at all..
if ((sizeof($_GET)>0) && (preg_match('/\bhch\d\b/',$_GET["dev"]))) {

  # if the device transmitted is valid, then switch to this for comms verification
  $dev = $_GET["dev"];

  # calculate the one time shared password
  //$otp = md5($dev."poop".strval($ts));
  $crcnum = crc32($dev."poop".strval($ts));
  //$crcnum = crc32($dev."poop".strval($ts));
  $otp = sprintf("%lX",$crcnum);

  if ($otp == $_GET["otp"]){

    # once the one time password is verified, then determine if we need to update any settings
    # if the passwords don't match, don't send anything - stealth mode all the way
    # influxdb timestamp: 1534441595735638926 22.8 - don't need no stinking nano seconds...

    # if timestamp of last change received from device is less than timestamp of
    # last change on database, then server wins. if device change is more recent
    # than database, then device wins. After determination of winner, timestamp
    # of last change should be the same so that device and server only need to act
    # if timestamp is different.

    # get lastupdate time and all the settings associated with the change

    $mysqli = new mysqli("localhost", "web", "the.Webiot1", "iot1");
    #select updated,device,bywho,setT,setH,fruit from dev_settings order by updated desc limit 1;
    /* Select queries return a resultset */
    if ($result = $mysqli->query("select updated,device,bywho,setT,setH,fruit from dev_settings where device='".$dev."' order by updated desc limit 1")) {

        if ($row = $result->fetch_row()) {
          $updatestr=$row[0];
          #$device=$row[1];
          $setT = $row[3];$setH = $row[4];$fruit=$row[5];
        }
        /* free result set */
        $result->close();
    }
    $lastupdate = strtotime($updatestr);
    # compare server lastupdate time to device last update time
    if ($lastupdate < $_GET["lastupdate"]) {
      // device wins, update server database and send back its own data
      // insert into dev_settings (device,bywho,setT,setH,fruit) values ('hch2','server','2610','80','0');

      $lastupdate = $_GET["lastupdate"];
      $setT = $_GET["setT"];$setH = $_GET["setH"];$fruit=$_GET["fruit"];

      $qstr = "insert into dev_settings (updated,device,bywho,setT,setH,fruit) values ('".date('Y-m-d H:i:s', $lastupdate)."','".$dev."','device','".$setT."','".$setH."','".$fruit."')"
      print $qstr;
      if ($mysqli->query($qstr))
      {} else {echo "FAIL!!!";}

    } else if ($lastupdate > $_GET["lastupdate"]) {
      //server wins, do nothing and hope that the device listens to us and updates its own damn data
    }

    header("iot: dev=".$dev."&setT=".$setT."&setH=".$setH."&fruit=".$fruit."&lastupdate=".$lastupdate."&otp=".$otp);
    $mysqli->close();
  }
}

?><!DOCTYPE html>
<html>

<body>
<p>test file</P>
</body>
</html>
